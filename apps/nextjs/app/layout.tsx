import { PrismaQueryProvider } from '@apps-next/query-adapter';
import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
import Link from 'next/link';
import { viewLoader, viewMutation } from './fastapp/tasks/actions';
import './global.css';

import '@picocss/pico/css/pico.classless.min.css';
import React from 'react';

export const metadata = {
  title: 'Welcome to nextjs',
  description: 'Generated by create-nx-workspace',
};

import { createConfigFromPrismaSchema } from '@apps-next/core';
import { Prisma } from '@prisma/client';
import { PrismaClientType } from '../db';

export const config = createConfigFromPrismaSchema<
  Prisma.DMMF.Datamodel,
  PrismaClientType
>(Prisma.dmmf.datamodel);

declare module '@apps-next/core' {
  interface Register {
    config: typeof config;
  }
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <React.StrictMode>
        <body>
          <PrismaQueryProvider
            globalConfig={{
              ...config,
              provider: 'prisma',
            }}
            api={{
              viewLoader: viewLoader,
              viewMutation: viewMutation,
            }}
          >
            <div className="p-2">
              <div className="flex gap-2 text-lg border-b">
                <Link href={'/'}>Home</Link>
              </div>

              <hr />

              {children}
            </div>

            <ReactQueryDevtools initialIsOpen={false} />
          </PrismaQueryProvider>
        </body>
      </React.StrictMode>
    </html>
  );
}
