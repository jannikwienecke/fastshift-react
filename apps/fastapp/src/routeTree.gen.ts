/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodosImport } from './routes/todos'
import { Route as LegendImport } from './routes/legend'
import { Route as KanbanImport } from './routes/kanban'
import { Route as FastAppImport } from './routes/fastApp'
import { Route as IndexImport } from './routes/index'
import { Route as FastAppTasksImport } from './routes/fastApp.tasks'
import { Route as FastAppProjectsImport } from './routes/fastApp.projects'

// Create/Update Routes

const TodosRoute = TodosImport.update({
  path: '/todos',
  getParentRoute: () => rootRoute,
} as any)

const LegendRoute = LegendImport.update({
  path: '/legend',
  getParentRoute: () => rootRoute,
} as any)

const KanbanRoute = KanbanImport.update({
  path: '/kanban',
  getParentRoute: () => rootRoute,
} as any)

const FastAppRoute = FastAppImport.update({
  path: '/fastApp',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FastAppTasksRoute = FastAppTasksImport.update({
  path: '/tasks',
  getParentRoute: () => FastAppRoute,
} as any)

const FastAppProjectsRoute = FastAppProjectsImport.update({
  path: '/projects',
  getParentRoute: () => FastAppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/fastApp': {
      id: '/fastApp'
      path: '/fastApp'
      fullPath: '/fastApp'
      preLoaderRoute: typeof FastAppImport
      parentRoute: typeof rootRoute
    }
    '/kanban': {
      id: '/kanban'
      path: '/kanban'
      fullPath: '/kanban'
      preLoaderRoute: typeof KanbanImport
      parentRoute: typeof rootRoute
    }
    '/legend': {
      id: '/legend'
      path: '/legend'
      fullPath: '/legend'
      preLoaderRoute: typeof LegendImport
      parentRoute: typeof rootRoute
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosImport
      parentRoute: typeof rootRoute
    }
    '/fastApp/projects': {
      id: '/fastApp/projects'
      path: '/projects'
      fullPath: '/fastApp/projects'
      preLoaderRoute: typeof FastAppProjectsImport
      parentRoute: typeof FastAppImport
    }
    '/fastApp/tasks': {
      id: '/fastApp/tasks'
      path: '/tasks'
      fullPath: '/fastApp/tasks'
      preLoaderRoute: typeof FastAppTasksImport
      parentRoute: typeof FastAppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FastAppRoute: FastAppRoute.addChildren({
    FastAppProjectsRoute,
    FastAppTasksRoute,
  }),
  KanbanRoute,
  LegendRoute,
  TodosRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/fastApp",
        "/kanban",
        "/legend",
        "/todos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/fastApp": {
      "filePath": "fastApp.tsx",
      "children": [
        "/fastApp/projects",
        "/fastApp/tasks"
      ]
    },
    "/kanban": {
      "filePath": "kanban.tsx"
    },
    "/legend": {
      "filePath": "legend.tsx"
    },
    "/todos": {
      "filePath": "todos.tsx"
    },
    "/fastApp/projects": {
      "filePath": "fastApp.projects.tsx",
      "parent": "/fastApp"
    },
    "/fastApp/tasks": {
      "filePath": "fastApp.tasks.tsx",
      "parent": "/fastApp"
    }
  }
}
ROUTE_MANIFEST_END */
